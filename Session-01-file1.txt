

Fork below repository:-
https://github.com/RedHatTraining/DO288-apps

Then git clone to student's home directory
git clone httpd://github.com/cprakash2118/DO288-apps

lab-config 


#####
Example of appliaction deployment using SCM (github) 

Fork below repository:-
https://github.com/cprakash2118/repo01


# Check the image in openshift internal registry.
$ oc get is -n openshift | grep nodejs 
$ oc get istag -n openshift | grep nodejs

# To download the image from RedHat portal.
RedHat container image registry - registry.redhat.io 
https://catalog.redhat.com/software/containers/search?q=ubi


$ oc new-app --name myapp01  nodejs:16-ubi8~https://github.com/cprakash2118/repo01 --as-deployment-config --build-env npm_config_registry=http://${RHT_OCP4_NEXUS_SERVER}/repository/nodejs

$ oc get pods 
$ oc logs -f bc/myapp01 
Note: Error - Need code correction.

$ git clone https://github.com/cprakash2118/repo01
$ cd repo01 
$ python  -m  json.tool  package.json
$ vim package.json 
$ git add .
$ git commit -m "Update"
$ git push 
$ oc start-build myapp01 
$ oc get pods 
$ oc logs -f bc/myapp01 


Note: Below command is an example of deploying application using registry and SCM (github.com).

 oc new-app --name myapp01  nodejs:16-ubi8~https://github.com/cprakash2118/repo01 --as-deployment-config --build-env npm_config_registry=http://${RHT_OCP4_NEXUS_SERVER}/repository/nodejs
 
 or
 
 oc new-app --name myapp01 -i nodejs:16-ubi8   https://github.com/cprakash2118/repo01 --as-deployment-config --build-env npm_config_registry=http://${RHT_OCP4_NEXUS_SERVER}/repository/nodejs
 
 or 
 
 
  oc new-app --name myapp01 --image-stream nodejs:16-ubi8   https://github.com/cprakash2118/repo01 --as-deployment-config --build-env npm_config_registry=http://${RHT_OCP4_NEXUS_SERVER}/repository/nodejs
  
 ##############
 
 oc new-app --name myapp02 quay.io/cprakash2118/ubi8-apache-java-unzip-image01
 or 
 oc new-app --name myapp02 --docker-image quay.io/cprakash2118/ubi8-apache-java-unzip-image01
  
  
 oc new-app --as-deployment-config --name hello -i httpd --code http://github.com/cprakash2118/web
 
#################################
Session-02 (day-02):-
Recap:-

### Deploy applications on OCP cluster:-
1) new-app 
2) template 

1) new-app approche 

#type-01 
Note: Build application outside OCP cluster (3rd party provides build as image) and directly using image we can deploy application.

$ oc new-project project01
$ oc get all 
$ oc new-app --name myapp01 quay.io/cprakash2118/ubi8-apache-java-unzip-image01
or
$ oc new-app --name myapp01 --docker-image quay.io/cprakash2118/ubi8-apache-java-unzip-image01


#Type-02 
Note: Build application within the OCP cluster and deploy also in same OCP cluster.
$ oc new-project project02 
$ oc get all 
$ oc new-app --name myapp02 --as-deployment-config -i httpd https://github.com/cprakash2118/web 

Note: Here image (Apache image - httpd enabled, web application is simple html based app "index.html").


****
--as-deployment-config
--image-stream
--context-dir 

Consider your complete product/application (DO288-apps).
fork the DO288-apps from https://github.com/RedHatTraining/DO288-apps

#################
$git clone https://github.com/RedHatTraining/DO288-apps
$ cd DO288-apps
$ git branch (main/master)
$ git checkout master/main   (It's realdy updated or it will update few data).
$ git checkout -b project-01-ubi-sleep 
$ git branch 
* project-01-ubi-sleep
  main
* git push -u origin project-01-ubi-sleep  
username:
password: 
$ pwd
<path>/DO288-apps/
$ ls -ld ubi-sleep 
NOte: --- Modify the component (ubi-sleep)
 - Date - 24-March-2023 
 - then git commit 
 - then git push 
 
  oc new-app --name echo-build11 --as-deployment-config   https://github.com/${RHT_OCP4_GITHUB_USER}/DO288-apps#docker-build11 --context-dir ubi-sleep


Once this is done 
mkdir /home/student/work02 
$ git clone https://github.com/cprakash2118/DO288-apps
$ cd DO288-apps
$ oc new-app --name echo-build11-main --as-deployment-config   https://github.com/${RHT_OCP4_GITHUB_USER}/DO288-apps#docker-build11 --context-dir ubi-sleep

This application different and over application different.



###########
To get the OCP cluster web console 
$ oc whoami --show-console 

$ oc get route -n openshift-console 

Check logs and events about he pod/deployment/deployment-config & buildConfig 

$ oc logs <pod_name>
$ oc logs -f bc/bc_name 
$ oc get all
$ oc get svc 
$ oc get dc 
$ oc get bc 
$ oc get is 
$ oc get is -n openshift | grep php 
$ oc get istag -n openshift | grep php 

############################
Designing Containerized Applications for OpenShift

Image 
Dockerfile 
Source2Image (S2I)

S2I and Dockerfile/Conatinerfile 

UBI example 
https://catalog.redhat.com/software/containers/search?q=UBI
https://catalog.redhat.com/software/containers/ubi8/ubi/5c359854d70cc534b3a3784e




Example:
###################

$ podman pull quay.io/redhattraining/php-hello-dockerfile
$ podman images
$ podman tag quay.io/redhattraining/php-hello-dockerfile quay.io/<your_quayID>/redhattraining-php-hello-dockerfile
$ podman push quay.io/<your_quayID>/redhattraining-php-hello-dockerfile

Example: quayID = cprakash2118
$ podman pull quay.io/redhattraining/php-hello-dockerfile
$ podman images
$ podman tag quay.io/redhattraining/php-hello-dockerfile quay.io/cprakash2118/redhattraining-php-hello-dockerfile
$ podman push quay.io/cprakash2118/redhattraining-php-hello-dockerfile
  Note: It will not work, as required credentials.
  
podman login quay.io
podman push quay.io/cprakash2118/redhattraining-php-hello-dockerfile 
podman logout 


###
How to do the same for OCP cluster.

$ cat ${XDG_RUNTIME_DIR}/containers/auth.json

$ oc import-image myimage cprakash2118/redhattraining-php-hello-dockerfile --from=quay.io/cprakash2118/redhattraining-php-hello-dockerfile --confirm

Above command will not work ? (Because credentils issue)

$ podman login quay.io 
user_name:
passwd: 

$ cat ${XDG_RUNTIME_DIR}/containers/auth.json

$ oc create secret generic quay-registry --from-file .dockerconfigjson=${XDG_RUNTIME_DIR}/containers/auth.json --type kubernetes.io/dockerconfigjson
$ oc secrets link builder quay-registry

$ oc import-image cprakash2118/redhattraining-php-hello-dockerfile --from=quay.io/cprakash2118/redhattraining-php-hello-dockerfile --confirm


############






























 
 
 
 
 
 
  
  
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 